swagger: '2.0'
info:
  version: 1.0.0
  title: Console API
  description: Admin Console Public API to give outer access to some data
basePath: /api/v1
paths:
  /users/branch/{id}:
    get:
      tags:
        - Users
      summary: Returns list of users.
      description: Returns list of users filtered by given branch ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A branch ID to select all users from that branch
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            role: "5c7b54d6df8d462104a97f03",
                            status: true,
                            name: "Romy",
                            surname: "Lenham",
                            email: "rlenham0@foxnews.com",
                            groupId: "5c7b54d4df8d462104a97ef9",
                            branchId: "5c7b54d2df8d462104a97ee6"
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /users/group/{id}:
    get:
      tags:
        - Users
      summary: Returns list of users.
      description: Returns list of users filtered by given group ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A groupd ID to select all users who has such group
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            role: "5c7b54d6df8d462104a97f03",
                            status: true,
                            name: "Romy",
                            surname: "Lenham",
                            email: "rlenham0@foxnews.com",
                            groupId: "5c7b54d4df8d462104a97ef9",
                            branchId: "5c7b54d2df8d462104a97ee6"
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /users/{id}:
    get:
      tags:
        - Users
      summary: Returns user.
      description: Returns one user with given ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: An ID of exact user
      responses:
        '200':
          description: A user object
          schema:
            type: object
            example: {
              _id: "5c7b54d6df8d462104a97f04",
              role: "5c7b54d6df8d462104a97f03",
              status: true,
              name: "Romy",
              surname: "Lenham",
              email: "rlenham0@foxnews.com",
              groupId: "5c7b54d4df8d462104a97ef9",
              branchId: "5c7b54d2df8d462104a97ee6"
            }
        '404':
          description: If the user was not found
          schema:
            type: object
            example: { error: 'User not found' }
    put:
      tags:
        - Users
      summary: Returns updated user.
      description: Updates the user with given values (fields which can be edited limited)
      consumes:
        - "application/x-www-form-urlencoded"
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: branchId
          in: formData
          required: true
          type: string
        - name: groupId
          in: formData
          required: true
          type: string
        - name: role
          in: formData
          required: true
          type: array
          items:
            type: string
        - name: status
          in: formData
          required: true
          type: boolean
      responses:
        '200':
          description: An updated user object
          schema:
            type: object
            example: {
              _id: "5c7b54d6df8d462104a97f04",
              role: "5c7b54d6df8d462104a97f03",
              status: true,
              name: "Romy",
              surname: "Lenham",
              email: "rlenham0@foxnews.com",
              groupId: "5c7b54d4df8d462104a97ef9",
              branchId: "5c7b54d2df8d462104a97ee6"
            }
        '404':
          description: If the user was not found
          schema:
            type: object
            example: { error: 'User not found' }

  /tickets/branch/{id}:
    get:
      tags:
        - Tickets
      summary: Returns list of tickets.
      description: Returns list of users filtered by given branch ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A branch ID to select all tickets created by users from that branch
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            authorId: "6d7b54d6df8d462104a97f31",
                            branchId: "5c7b54d2df8d462104a97ee6",
                            message: "My mouse works incorrectly. Perhaps, I need a new one because I have been using this one for 5 years.",
                            note: null,
                            status: 'Opened',
                            created: 1551680943445,
                            closed: null
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /tickets/user/{id}:
    get:
      tags:
        - Tickets
      summary: Returns list of tickets.
      description: Returns list of users filtered by given user ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A user ID to select all tickets created by that user
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            authorId: "6d7b54d6df8d462104a97f31",
                            branchId: "5c7b54d2df8d462104a97ee6",
                            message: "My mouse works incorrectly. Perhaps, I need a new one because I have been using this one for 5 years.",
                            note: null,
                            status: 'Opened',
                            created: 1551680943445,
                            closed: null
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /tickets/{id}:
    get:
      tags:
        - Tickets
      summary: Returns one ticket with given ID.
      description: Returns list of users filtered by given user ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: An ID of exact ticket to select a single record
      responses:
        '200':
          description: A ticket object
          schema:
            type: object
            example: {
              _id: "5c7b54d6df8d462104a97f04",
              authorId: "6d7b54d6df8d462104a97f31",
              branchId: "5c7b54d2df8d462104a97ee6",
              message: "My mouse works incorrectly. Perhaps, I need a new one because I have been using this one for 5 years.",
              note: null,
              status: 'Opened',
              created: 1551680943445,
              closed: null
            }
        '404':
          description: Ticket with such ID was not found
          schema:
            type: object
            example: { error: 'Ticket not found' }
    put:
      tags:
        - Tickets
      summary: Updates ticket and returns it.
      description: Updates the ticket with given values (fields which can be edited limited)
      consumes:
        - "application/x-www-form-urlencoded"
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: status
          in: formData
          required: true
          type: string
        - name: note
          in: formData
          required: false
          type: string
      responses:
        '200':
          description: An updated ticket
          schema:
            type: object
            example: {
              _id: "5c7b54d6df8d462104a97f04",
              authorId: "6d7b54d6df8d462104a97f31",
              branchId: "5c7b54d2df8d462104a97ee6",
              message: "My mouse works incorrectly. Perhaps, I need a new one because I have been using this one for 5 years.",
              note: "New mice will arrive in your office in a week",
              status: 'In progress',
              created: 1551680943445,
              closed: null
            }

  /messages/branch/{id}:
    get:
      tags:
        - Messages
      summary: Returns list of messages.
      description: Returns list of messages filtered by given branch ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A branch ID to select all messages sent to that branch
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7d16a84186ed5c5c3e36c3",
                            subject: "Fusce posuere felis sed lacus.",
                            message: "Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend.",
                            created: "2016-07-17T14:22:55.000Z",
                            senderId: "5c7d16a44186ed5c5c3e3512",
                            branchId: "5c7d169d4186ed5c5c3e319c",
                            groupId: null
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /messages/group/{id}:
    get:
      tags:
        - Messages
      summary: Returns list of messages.
      description: Returns list of messages filtered by given group ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A group ID to select all messages sent to that group
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7d16a84186ed5c5c3e36c3",
                            subject: "Fusce posuere felis sed lacus.",
                            message: "Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend.",
                            created: "2016-07-17T14:22:55.000Z",
                            senderId: "5c7d16a44186ed5c5c3e3512",
                            branchId: "5c7d169d4186ed5c5c3e319c",
                            groupId: null
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /messages/user/{id}:
    get:
      tags:
        - Messages
      summary: Returns list of messages.
      description: Returns list of messages filtered by given sender ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A sender ID to select all messages sent by that user
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7d16a84186ed5c5c3e36c3",
                            subject: "Fusce posuere felis sed lacus.",
                            message: "Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend.",
                            created: "2016-07-17T14:22:55.000Z",
                            senderId: "5c7d16a44186ed5c5c3e3512",
                            branchId: "5c7d169d4186ed5c5c3e319c",
                            groupId: null
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1

  /messages/{id}:
    get:
      tags:
        - Messages
      summary: Returns single message.
      description: Returns single message selected by given ID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: A message ID to select a single record
      responses:
        '200':
          description: A message object
          schema:
            type: object
            example: {
                        _id: "5c7d16a84186ed5c5c3e36c3",
                        subject: "Fusce posuere felis sed lacus.",
                        message: "Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend.",
                        created: "2016-07-17T14:22:55.000Z",
                        senderId: "5c7d16a44186ed5c5c3e3512",
                        branchId: "5c7d169d4186ed5c5c3e319c",
                        groupId: null
                      }
        '404':
          description: Message with such ID was not found
          schema:
            type: object
            example: { error: 'Message not found' }

  /messages/new:
    post:
      tags:
        - Messages
      summary: Returns a newly created message
      description: Creates a new message and returns it
      consumes:
        - "application/x-www-form-urlencoded"
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: subject
          in: formData
          required: true
          type: string
          description: A subject of the message
        - name: message
          in: formData
          required: true
          type: string
          description: A text of the message
        - name: groupId
          in: formData
          required: false
          type: string
          description: An ID of group. Isn't required if you provide a branch ID. Other way it's required.
        - name: branchId
          in: formData
          required: false
          type: string
          description: An ID of branch. Isn't required if you provide a group ID. Other way it's required.
      responses:
        '200':
          description: A message ID
          schema:
            type: object
            example: {
              _id: "5c7d16a84186ed5c5c3e36c3",
              subject: "Fusce posuere felis sed lacus.",
              message: "Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend.",
              created: "2016-07-17T14:22:55.000Z",
              senderId: "5c7d16a44186ed5c5c3e3512",
              branchId: "5c7d169d4186ed5c5c3e319c",
              groupId: null
            }
        '400':
          description: An invalid input. For example, both group and branch ID were missed
          schema:
            type: object
            example: { error: 'Group or Branch should be chosen' }