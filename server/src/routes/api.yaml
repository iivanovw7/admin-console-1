swagger: '2.0'
info:
  version: 1.0.0
  title: Console API
  description: Admin Console Public API to give outer access to some data
basePath: /api/v1
paths:
  /users/:branchId:
    get:
      summary: Returns list of users.
      description: Returns list of users filtered by given branch ID
      parameters:
        - name: branchId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            roles: ["5c7b54d6df8d462104a97f03"],
                            status: true,
                            name: "Romy",
                            surname: "Lenham",
                            email: "rlenham0@foxnews.com",
                            groupId: "5c7b54d4df8d462104a97ef9",
                            branchId: "5c7b54d2df8d462104a97ee6"
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1
  /users/:groupId:
    get:
      summary: Returns list of users.
      description: Returns list of users filtered by given group ID
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
        - name: page
          in: query
          required: false
          description: A page number that user wants to request (offset)
          type: integer
          minimum: 1
          default: 1
        - name: limit
          in: query
          required: false
          description: Number of items per page
          type: integer
          minimum: 1
          default: 20
      responses:
        '200':
          description: An object with data and information about total number and number of pages with given or default limit (20 items per page by default)
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                example: [{
                            _id: "5c7b54d6df8d462104a97f04",
                            roles: ["5c7b54d6df8d462104a97f03"],
                            status: true,
                            name: "Romy",
                            surname: "Lenham",
                            email: "rlenham0@foxnews.com",
                            groupId: "5c7b54d4df8d462104a97ef9",
                            branchId: "5c7b54d2df8d462104a97ee6"
                          }]
              total:
                type: integer
                example: 1
              page:
                type: integer
                example: 1
  /users/:id:
    get:
      summary: Returns user.
      description: Returns one user with given ID
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: A user object
          schema:
            type: object
            example: {
                        _id: "5c7b54d6df8d462104a97f04",
                        roles: ["5c7b54d6df8d462104a97f03"],
                        status: true,
                        name: "Romy",
                        surname: "Lenham",
                        email: "rlenham0@foxnews.com",
                        groupId: "5c7b54d4df8d462104a97ef9",
                        branchId: "5c7b54d2df8d462104a97ee6"
                      }
        '404':
          description: Response in the case of exception of if user was not found
          schema:
            type: object
            example: { error: 'User not found' }


